
$highlightColor: rgb(180,0,0);
$buttonBoxShadow: inset 0 0 0 0.1rem #fff;
// button background, text, outline, and arrow
$buttonHoverTransition: background-color 100ms linear, color 100ms linear, stroke 100ms linear, border-color 100ms linear;



@mixin blockShadow($depth) {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgb(0,0,0);
  opacity: 0.1;
  transform: translate3d(0,0,$depth);
  z-index: -999;
  pointer-events: none;
}

@mixin rightArrow($size) {
  content: '';
  position: absolute;
  top: 50%;
  right: -($size*2)+rem;
  margin-top: -($size/1.5)+rem;
  width: 1rem;

  border-top: $size+rem solid transparent;
  border-bottom: $size+rem solid transparent;
  border-left: ($size*1.25)+rem solid $highlightColor;
}


.floatingButton {
  animation-name: floatingButtonAnimation;
  animation-duration: 4s;
  animation-delay: 1s; // to allow routing animation to complete
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

@keyframes floatingButtonAnimation {
  0% { transform: translate3d(0,0,0rem); }
  50% { transform: translate3d(0,0,-1.5rem); }
  100% { transform: translate3d(0,0,0rem); }
}







.button {
  cursor: pointer;
  pointer-events: all;

  //&:before {
  //  @include blockShadow(-14rem);
  //}

  .Block3d {
    @extend .floatingButton;
  }

  // background
  .Block3d__content {
    padding: 0.6rem 1rem 0.6rem 0.6rem;
    box-shadow: $buttonBoxShadow;
    transition: $buttonHoverTransition;
  }

  // arrow
  h3:after {
    @include rightArrow(0.22);
  }

  &:hover {
    .Block3d__content {
      background-color: $highlightColor;
    }

    h3 {
      color: #fff;
      transition: $buttonHoverTransition;
    }
    h3:after {
      border-left-color: #fff;
      transition: $buttonHoverTransition;
    }
  }
}
