
$highlightColor: rgb(180,0,0);
$buttonBoxShadow: inset 0 0 0 0.1rem #fff;
$xButtonBoxShadow: inset 0 0 0 1px #fff;

// button background, text, outline, and arrow
$buttonHoverTransition: background-color 100ms linear, color 100ms linear, stroke 100ms linear, border-color 100ms linear;

$breakpoint-mobile: 1020px;


$siteIntroHeight: 80vh;
$siteIntroHeight--mobile: 60vh;
$mobileMinSize: 2.5rem;


@mixin rightArrow($size) {
  content: '';
  position: absolute;
  top: 50%;
  right: -($size*2)+rem;
  margin-top: -($size*0.95)+rem;
  width: ($size*4)+rem;

  border-top: $size+rem solid transparent;
  border-bottom: $size+rem solid transparent;
  border-left: ($size*1.25)+rem solid $highlightColor;
}

@mixin mobileBox($depth, $colorRight, $colorBottom) {

  &:after {
    content: '';
    position: absolute;
    z-index: -1;
    top: 0;
    right: -$depth;
    width: $depth;
    height: 100%;

    transform: skewY(45deg);
    transform-origin: 0 0;
    background-color: $colorRight;
  }

  &:before {
    content: '';
    position: absolute;
    z-index: -1;
    left: 0;
    bottom: -$depth;
    width: 100%;
    height: $depth;

    transform: skewX(45deg);
    transform-origin: top center;
    background-color: $colorBottom;
  }
}


.floatingButton {
  animation-name: floatingButtonAnimation;
  animation-duration: 4s;
  animation-delay: 1.5s; // to allow routing animation to complete
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

@keyframes floatingButtonAnimation {
  0% {
    transform: translate3d(0,0,0);
  }
  50% {
    transform: translate3d(0,0,-1.5rem);

    @media screen and (max-width: $breakpoint-mobile){
      transform: translate3d(-0.25rem,-0.25rem,0) !important;
    }
  }
  100% {
    transform: translate3d(0,0,0);
  }
}







.button {
  cursor: pointer;
  pointer-events: all;
  @extend h3;


  .Block3d {
    @extend .floatingButton;

    &:after {
      @include rightArrow(0.22);

      @media screen and (max-width: $breakpoint-mobile){
        @include rightArrow(0.3);
      }
    }
  }

  // background
  .Block3d__content {
    padding: 0.6rem 1rem 0.6rem 0.6rem;
    box-shadow: $buttonBoxShadow;
    transition: $buttonHoverTransition;

    @media screen and (max-width: $breakpoint-mobile){
      @include mobileBox(0.25rem, rgb(200,200,200), rgb(160,160,160));
      padding: 1rem 1.4rem 1rem 1rem;
    }
  }

  &:hover {
    .Block3d__content {
      background-color: $highlightColor;
    }

    h3 {
      color: #fff;
      transition: $buttonHoverTransition;
    }
    h3:after {
      border-left-color: #fff;
      transition: $buttonHoverTransition;
    }
  }
}
